# ðŸ“¡ PDS: Git Action for LDD Generation
# =====================================
#
# This is a GitHub action that generates LDD for the current LDD Github Repo

---

name: 'âœ… PDS LDD Generation'
author: 'Jordan Padams <jordan.h.padams@jpl.nasa.gov>'
branding:
  icon: 'archive'
  color: 'green'

inputs:
  datapath:
    description: |
      Absolute path to data to validate
    required: true
  pds4_im_version:
    description: |
      PDS4 Information Model Version. Defaults to the latest version. Use the semantic version, e.g. 1.14.0.0
    required: false
    default: 'latest'
  schemas:
    description: |
      Path(s) to schemas to use for validation. By default, validate will use the schemas specified in the PDS4 labels.
    required: false
  schematrons:
    description: |
      Path(s) to schematrons to use for validation. By default, validate will use the schemas specified in the PDS4 labels.
    required: false
  skip_content_validation:
    description: |
      Flag to disable data product content validation. This checks the actual bits in the data product match the XML specification. By default, this is enabled.
    required: false
    default: 'false'
  failure_expected:
    description: |
      Flag to specify that validation failure is expected. This is intended for failure regression test cases.
    required: false
    default: 'false'
  github_token:
    description: |
      Github secret token
    required: true

runs:
  using: 'composite'
  # using: 'composite'
  # image: 'Dockerfile'
  steps:
    - run: '${{ github.action_path }}/entrypoint.sh "${{inputs.datapath}}" "${{inputs.pds4_im_version}}" "${{inputs.release}}"'
      shell: bash
    # - run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "GitHub Action"
    #     git config --local github.token ${{ inputs.github_token }}
    #     git add $DEPLOY_DIR
    #     git commit -m "Auto-generated dictionaries from Github Actions"
    #     git config --global push.default current
    #     git push
    #   shell: bash
    - run: |
          # Get the PDS core dictionaries
          mkdir -p $TMP_DICT_DIR
          wget --directory-prefix=$TMP_DICT_DIR "${PDS_SCHEMA_URL}/PDS4_PDS_${IM_VERSION_SHORT}.xsd"
          wget -q --directory-prefix=$TMP_DICT_DIR "${PDS_SCHEMA_URL}/PDS4_PDS_${IM_VERSION_SHORT}.sch"
      shell: bash

    - run: |
        ${{ github.action_path }}/validate.sh "${{inputs.datapath}}/*.xml" "${{inputs.schemas}} $TMP_DICT_DIR/*.xsd" "${{inputs.schematrons}} $TMP_DICT_DIR/*.sch"
      shell: bash

    - run: |
        if ls $REGRESSION_TEST_DIR/*.xml 1> /dev/null 2>&1 ; then
          # Update info in examples
          sed -i "s/\[IM_VERSION\]/$IM_VERSION/g" $REGRESSION_TEST_DIR/*.xml

          ${{ github.action_path }}/validate.sh "$REGRESSION_TEST_DIR/*_VALID.xml" "${{inputs.schemas}} $TMP_DICT_DIR/*.xsd" "${{inputs.schematrons}} $TMP_DICT_DIR/*.sch" "false"
          ${{ github.action_path }}/validate.sh "$REGRESSION_TEST_DIR/*_FAIL.xml" "${{inputs.schemas}} $TMP_DICT_DIR/*.xsd" "${{inputs.schematrons}} $TMP_DICT_DIR/*.sch" "true"
        else
          echo 'Regression Tests do not exist, skipping'
          exit 0
        fi
      shell: bash

